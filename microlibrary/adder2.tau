# Tau Specification for a 2-Bit Modular Adder

# 1. Define the primitive Full Adder component.
# This definition is self-contained and used by the adder.
define fa(a,b,cin,s,cout) = (s=(a+b+cin) & cout=((a&b)|((a+b)&cin)))

# 2. Define the 2-bit adder by composing two full adders.
# This demonstrates the modular assembly of verified components.
# Inputs: a0,a1 (first number), b0,b1 (second number), cin (initial carry-in)
# Outputs: s0,s1 (sum), cout (final carry-out)
define adder2(a0,a1,b0,b1,cin,s0,s1,cout) = (exists c1. (fa(a0,b0,cin,s0,c1) & fa(a1,b1,c1,s1,cout)))

# 3. Test the 2-bit adder with a concrete example.
# We will prove that 2 + 1 = 3.
# a = 2 (binary 10) -> a1=1, a0=0
# b = 1 (binary 01) -> b1=0, b0=1
# cin = 0
# Expected result: s = 3 (binary 11) -> s1=1, s0=1, cout=0
solve adder2(0,1,1,0,0,1,1,0)

quit
