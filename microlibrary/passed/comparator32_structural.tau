# 32-Bit Comparator (Structural Specification)
#
# This specification defines a 32-bit comparator by using a 32-bit subtractor.
# The comparison outputs (G, E, L) are derived from the subtractor's result (S) and borrow-out (O).
# G (Greater): No borrow and S is not zero.
# E (Equal):   No borrow and S is zero.
# L (Less):    A borrow occurred.

# Helper predicate to check if a 32-bit vector is zero.
is_zero32(z31,z30,z29,z28,z27,z26,z25,z24,z23,z22,z21,z20,z19,z18,z17,z16,z15,z14,z13,z12,z11,z10,z9,z8,z7,z6,z5,z4,z3,z2,z1,z0) := (
    z31' & z30' & z29' & z28' & z27' & z26' & z25' & z24' & z23' & z22' & z21' & z20' & z19' & z18' & z17' & z16' &
    z15' & z14' & z13' & z12' & z11' & z10' & z9' & z8' & z7' & z6' & z5' & z4' & z3' & z2' & z1' & z0'
)

# Structural definition of the 32-bit comparator
comparator32_s(a31,a30,a29,a28,a27,a26,a25,a24,a23,a22,a21,a20,a19,a18,a17,a16,a15,a14,a13,a12,a11,a10,a9,a8,a7,a6,a5,a4,a3,a2,a1,a0, b31,b30,b29,b28,b27,b26,b25,b24,b23,b22,b21,b20,b19,b18,b17,b16,b15,b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0, g, e, l) := ex s31,s30,s29,s28,s27,s26,s25,s24,s23,s22,s21,s20,s19,s18,s17,s16,s15,s14,s13,s12,s11,s10,s9,s8,s7,s6,s5,s4,s3,s2,s1,s0, o, is_zero_res. (
    # Perform subtraction A - B
    subtractor32_s(a31,a30,a29,a28,a27,a26,a25,a24,a23,a22,a21,a20,a19,a18,a17,a16,a15,a14,a13,a12,a11,a10,a9,a8,a7,a6,a5,a4,a3,a2,a1,a0, b31,b30,b29,b28,b27,b26,b25,b24,b23,b22,b21,b20,b19,b18,b17,b16,b15,b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0, s31,s30,s29,s28,s27,s26,s25,s24,s23,s22,s21,s20,s19,s18,s17,s16,s15,s14,s13,s12,s11,s10,s9,s8,s7,s6,s5,s4,s3,s2,s1,s0, o) &

    # Check if the result is zero
    (is_zero_res + is_zero32(s31,s30,s29,s28,s27,s26,s25,s24,s23,s22,s21,s20,s19,s18,s17,s16,s15,s14,s13,s12,s11,s10,s9,s8,s7,s6,s5,s4,s3,s2,s1,s0))' &

    # Derive comparator outputs
    (l + o)' &
    (e + (is_zero_res & o'))' &
    (g + (is_zero_res' & o'))'
)
