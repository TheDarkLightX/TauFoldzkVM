# 8-Bit Adder (Behavioral Specification)
#
# This specification defines an 8-bit adder using Tau's native word-level arithmetic.
# It describes the "what" (the mathematical behavior) rather than the "how" (the gate-level structure).
#
# Its logical equivalence to the structural (ripple-carry) specification is formally
# proven in `proofs/passed/prove_adder8_equivalence.tau`.
#
# Inputs:
#   a7..a0: 8-bit input vector A
#   b7..b0: 8-bit input vector B
#   cin:    1-bit carry-in
#
# Outputs:
#   s7..s0:  8-bit sum vector S
#   cout:    1-bit final carry-out

# The expression `[cout,s...s0] = [a...a0] + [b...b0] + cin` directly represents
# the addition of two 8-bit numbers with a carry-in, resulting in a 9-bit output vector.
adder8_b(a7,a6,a5,a4,a3,a2,a1,a0, b7,b6,b5,b4,b3,b2,b1,b0, cin, s7,s6,s5,s4,s3,s2,s1,s0, cout) := [cout,s7,s6,s5,s4,s3,s2,s1,s0] = [a7,a6,a5,a4,a3,a2,a1,a0] + [b7,b6,b5,b4,b3,b2,b1,b0] + cin
